/*import com.mongodb.MongoClient
import com.mongodb.MongoClientURI*/

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath files('libs/api-automation-1.0-SNAPSHOT.jar')
    }
}
plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile 'cglib:cglib:3.2.4'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.squareup.retrofit2:converter-protobuf:2.6.1'
    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'io.appium', name: 'java-client', version: '2.2.0'
    compile group: 'org.testng', name: 'testng', version: '7.0.0'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.4.2'
    compile group: 'com.opencsv', name: 'opencsv', version: '3.7'


    // TestNG & ReportNG
    compile 'org.testng:testng:6.10'
    compile("org.uncommons:reportng:1.1.2") {
        exclude group: "org.testng", module: "testng"
    }
}

/*
static def getMongoClient() {
    String uri = System.getProperty("uri", "mongodb://root:password@172.31.248.24:27017")
    String database = "optimus" + "?authSource=admin"
    MongoClientURI mongoClientURI = new MongoClientURI(String.format("%s/%s", uri, database))
    MongoClient mongoClient = new MongoClient(mongoClientURI)
    return mongoClient
}

task loadData() {
    doLast {
        1.times {
            MongoClient mongoClient = getMongoClient()
            DataDocker dataDocker = new DataDocker(getMongoClient())
            dataDocker.createTestDataCollection()
            dataDocker.loadData()
            mongoClient.close()
        }
    }
}*/
